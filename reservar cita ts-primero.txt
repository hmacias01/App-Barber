import { Component, OnInit,ViewChild,Inject, LOCALE_ID } from '@angular/core';
import { AlertController } from '@ionic/angular';
import { ActivatedRoute } from '@angular/router';
import { ReservarcitaService } from "../../service/reservarcita.service";


@Component({
  selector: 'app-reservarcita',
  templateUrl: './reservarcita.page.html',
  styleUrls: ['./reservarcita.page.scss'],
})
export class ReservarcitaPage implements OnInit {
  servicios : any=[];
  barberos  : any=[];

  event = {
    title: '',
    startTime: '',
    endTime: ''
  };

   id:number=null;
  constructor(private alertCtrl: AlertController, @Inject(LOCALE_ID) private locale: string, private reservarservice : ReservarcitaService, private route: ActivatedRoute ) 
  { 
    console.log(this.route.snapshot.params['id']);
    this.id=+this.route.snapshot.params['id'];
  }

  minDate = new Date().toISOString();
 
  eventSource = [];
  viewTitle;
 
  calendar = {
    mode: 'month',
    currentDate: new Date(),
  };
 
  
  ngOnInit() {
    this.resetEvent();
    this.MostrarServicios(this.id)
    this.MostrarBarberos(this.id)
  }
 
  resetEvent() {
    this.event = {
      title: '',
      startTime: new Date().toISOString(),
      endTime: new Date().toISOString()
    };
  }
 
  // Create the right event format and reload source
  addEvent() {
    let eventCopy = {
      title: this.event.title,
      startTime:  new Date(this.event.startTime),
      endTime: new Date(this.event.endTime)
    }
    if (eventCopy) {
      let start = eventCopy.startTime;
      let end = eventCopy.endTime;
      eventCopy.startTime = new Date(Date.UTC(start.getUTCFullYear(), start.getUTCMonth(), start.getUTCDate()));
      eventCopy.endTime = new Date(Date.UTC(end.getUTCFullYear(), end.getUTCMonth(), end.getUTCDate() + 1));
    }
    this.eventSource.push(eventCopy);
    this.resetEvent();
}

 // Change current month/week/day
 next() {
  var swiper = document.querySelector('.swiper-container')['swiper'];
  swiper.slideNext();
}
back() {
  var swiper = document.querySelector('.swiper-container')['swiper'];
  swiper.slidePrev();
}
 
// Focus today
today() {
  this.calendar.currentDate = new Date();
}
 
// Selected date reange and hence title changed
onViewTitleChanged(title) {
  this.viewTitle = title;
}
 
// Time slot was clicked
onTimeSelected(ev) {
  let selected = new Date(ev.selectedTime);
  this.event.startTime = selected.toISOString();
  selected.setHours(selected.getHours() + 1);
  this.event.endTime = (selected.toISOString());
}

//Reservar una cita oficial



//Mostrando servicios segun barberia
  MostrarServicios(id){
    this.reservarservice.ObtenerServicios(id).subscribe(data =>{
      this.servicios=data;
    })
  }
//Mostrando barberos segun barberia
MostrarBarberos(id){
  this.reservarservice.ObtenerBarberos(id).subscribe(data =>{
    this.barberos=data;
  })
}

}
